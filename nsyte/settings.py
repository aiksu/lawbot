"""
Django settings for adc_v01 project.

Generated by 'django-admin startproject' using Django 1.8.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""
import os
import socket

from django.utils.translation import ugettext_lazy as _

import allauth

ugettext = lambda s: s

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '(df5sw=w$e=1kds83rqxykp+_2j*cqj@$gn5@dfktqop%&y4_9)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ADMIN = []

MANAGERS = ADMIN

ALLOWED_HOSTS = []

# ссылки на папки
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJECT_DIR = os.path.dirname(__file__)


PUBLIC_DIR = os.path.join(PROJECT_DIR, 'public')

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/
STATIC_ROOT = os.path.join(PUBLIC_DIR, 'static')

STATIC_URL = '/static/'

# набор статики обычно бывает не связанным ни с одним приложением
STATICFILES_DIRS = (
    os.path.join(PROJECT_DIR, 'static'),
)

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
)

# Папка на диске где будут сохраняться медиа файлы (например изображения загруженные пользователями)
MEDIA_ROOT = os.path.join(PUBLIC_DIR, 'media')
# Урл под которым медиа файлы будут доступны
MEDIA_URL = '/media/'

# Application definition
INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    #
    # 'authtools',#авторизация https://pypi.python.org/pypi/django-authtools
    #
    # Все что связано с авторизацией
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'rest_framework',
    'rest_framework.authtoken',
    'django_geoip',
    # 'allauth.socialaccount.providers.vk',
    # 'allauth.socialaccount.providers.facebook',
    # 'allauth.socialaccount.providers.google',
    'captcha',
    'dbmail',
    'csvimport.app.CSVImportConf',
)

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny'
    ],
    'DEFAULT_FILTER_BACKENDS': ('rest_framework.filters.DjangoFilterBackend',),
    'PAGE_SIZE': 1000
}


SITE_ID = 1

EMAIL_HOST_USER = 'info@zubmill.com'
SMS_HASH = "F0179F3F-346C-2C87-9CFD-82F541042E74"
EMAIL_HOST = 'smtp.yandex.ru'
EMAIL_PORT = 465
EMAIL_HOST_PASSWORD = 'infozub116'
EMAIL_USE_SSL = True
EMAIL_USE_TLS = False
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

# Настройки allauth
ACCOUNT_AUTHENTICATION_METHOD = 'username_email'  # username_email, username
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_UNIQUE_USERNAME = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_SIGNUP_PASSWORD_VERIFICATION = False

# ACCOUNT_SIGNUP_FORM_CLASS = 'wp.forms.SignupForm'
LOGIN_REDIRECT_URL = '/stock/'
LOGIN_URL = '/accounts/login/'


LOGOUT_REDIRECT_URL = 'http://127.0.0.1'

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'django.middleware.common.BrokenLinkEmailsMiddleware',
)

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': '127.0.0.1:11211',
    }
}

ROOT_URLCONF = 'nsyte.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # Укажем папку с общими для проектами шаблонами страниц
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                # `allauth` needs this from django
                'django.template.context_processors.request',
            ],
        },
    },
]

FILE_UPLOAD_HANDLERS = (
    "django.core.files.uploadhandler.MemoryFileUploadHandler",
    "django.core.files.uploadhandler.TemporaryFileUploadHandler")

AUTHENTICATION_BACKENDS = (
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
)

WSGI_APPLICATION = 'nsyte.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }

# PostegresSQL
#
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'nsyte',
        'USER': 'postgres',
        'PASSWORD': 'wasd',
        'HOST': 'localhost',
        'PORT': '5432',
    },
}

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/
LANGUAGE_CODE = 'en'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# список доступных языков
LANGUAGES = (
    ('en', _('English')),
)

# где ищет локализацию
LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
    os.path.join(BASE_DIR, 'allauth/locale'),
    # ('allauth/locale/ru/LC_MESSAGES/django.po'),
)

RECAPTCHA_PUBLIC_KEY = '6LeoVBgTAAAAAAqrDct6fE-J2-wbrmcugldxRjz0'
RECAPTCHA_PRIVATE_KEY = '6LeoVBgTAAAAAONntvmgq23tBl4pFzZpxecBgUGY'

RECAPTCHA_USE_SSL = True  # Defaults to False
